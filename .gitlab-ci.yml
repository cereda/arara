variables:
  # disable the Gradle daemon for Continuous Integration servers
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  GIT_SUBMODULE_STRATEGY: recursive
  ZOLA_VERSION: "v0.13.0"

include:
  - template: SAST.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml

stages:
  - build
  - test
  - publish

.buildtemplate: &builddefinition
  stage: build
  script:
    # create the executables for distribution
    - ./gradlew --build-cache assembleDist --info
    - mkdir bin
    - cp cli/build/libs/*.jar bin/
    - cp cli/build/distributions/*.zip bin/
    # create checksum file to make sure we're distributing the right thing
    - cd bin
    - md5sum *.{jar,zip} > checksums.txt
  artifacts:
    name: "$CI_COMMIT_REF_NAME-snapshot"
    paths:
      - bin
    expire_in: 1 week
  cache:
    key: "$CI_COMMIT_REF_NAME-$JAVA_VERSION"
    policy: push
    paths:
      - build
      - api/build
      - core/build
      - cli/build
      - .gradle

build:linux:jdk8:
  image: openjdk:8
  <<: *builddefinition

build:linux:jdk11:
  image: openjdk:11
  <<: *builddefinition

.testtemplate: &testdefinition
  stage: test
  script:
    - ./gradlew test
    - ./gradlew detekt
  cache:
    key: "$CI_COMMIT_REF_NAME-$JAVA_VERSION"
    policy: pull
    paths:
      - build
      - api/build
      - core/build
      - cli/build
      - .gradle

test:dependencies:
  stage: test
  needs: ["build:linux:jdk8"]
  image: openjdk:8
  script:
    - ./gradlew dependencyUpdates
  cache:
    key: "$CI_COMMIT_REF_NAME-$JAVA_VERSION"
    policy: pull
    paths:
      - build
      - api/build
      - core/build
      - cli/build
      - .gradle

test:spotless:
  stage: test
  needs: ["build:linux:jdk8"]
  image: openjdk:8
  script:
    - ./gradlew spotlessCheck
  cache:
    key: "$CI_COMMIT_REF_NAME-$JAVA_VERSION"
    policy: pull
    paths:
      - build
      - api/build
      - core/build
      - cli/build
      - .gradle

test:linux:jdk8:
  needs: ["build:linux:jdk8"]
  image: openjdk:8
  <<: *testdefinition

test:linux:jdk11:
  needs: ["build:linux:jdk11"]
  image: openjdk:11
  <<: *testdefinition

publish:gitlab:
  image: openjdk:8
  stage: publish
  script:
    - ./gradlew publishGitLabPublicationToMavenRepository -PjobToken=$CI_JOB_TOKEN -Prelease=true
  cache:
    key: "$CI_COMMIT_REF_NAME-$JAVA_VERSION"
    policy: pull
    paths:
      - build
      - api/build
      - core/build
      - cli/build
      - .gradle
  rules:
    - if: '$CI_COMMIT_TAG != null'

.ctantemplate: &ctandefinition
  stage: publish
  image: registry.gitlab.com/islandoftex/images/texlive:latest
  needs: ["test:linux:jdk8", "build:linux:jdk11"]
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends zip
    - ./gradlew -Prelease=$PRELEASE assembleCTAN --info
    - cp build/*.zip ./
  artifacts:
    name: "$CI_COMMIT_REF_NAME-ctan"
    paths:
      - ./*.zip
      - docs/*.pdf
    expire_in: 1 week
  cache:
    key: "$CI_COMMIT_REF_NAME-$JAVA_VERSION"
    policy: pull
    paths:
      - build
      - api/build
      - core/build
      - cli/build
      - .gradle
publish:snapshot_tdszip:
  variables:
    PRELEASE: "false"
  <<: *ctandefinition
  rules:
    - if: '$CI_COMMIT_TAG == null'
      when: always
    - when: never
publish:tdszip:
  variables:
    PRELEASE: "true"
  <<: *ctandefinition
  rules:
    - if: '$CI_COMMIT_TAG != null'
      when: always
    - when: never

pages:
  image: alpine:latest
  stage: publish
  script:
    - tail -n +8 README.md | sed 's/## /# /g' >> website/content/_index.md
    - tail -n +3 CHANGELOG.md | sed 's/## /# /g' >> website/content/CHANGELOG.md
    - apk add --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/community/ zola
    - cd website && zola build
    - cd .. && mv website/public ./public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: '$CI_COMMIT_TAG'
